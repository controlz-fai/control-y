#+begin_export latex

\newfontfamily\unicodefont{Doulos SIL}
#+end_export

#+HTML: <main>


Control Y es una columna que se emite cada dos viernes a las 15:00 por [[https://radiouncocalf.com][Radio Universidad CALF]] (FM 103.7) de Neuquén. Parte del Proyecto de Extensión "FaIComm: Charlando Sobre Informática", de la [[https://faiweb.uncoma.edu.ar][Facultad de Informática]], [[https://www.uncoma.edu.ar][Universidad Nacional del Comahue]].

En esta página se encuentran los guiones y la bibliografía utilizada en la columna. También, puede encontrar los recortes y la fecha de emisión para volver a escucharlas por [[https://radiocut.fm/radiostation/uncocalf/listen/][RadioCut]].

\warning{} Las columnas están ordenadas de manera inversa: la más reciente primero.

* Datos de la Columna

- Título :: Columna informática de Yo no fui.
- Sinopsis :: Aprender qué es la informática y los conceptos necesarios para entender el día a día de lo que sucede alrededor de la computadora. Explicaciones de hechos pasados y presentes relevantes para comprender lo que sucede a nuestro alrededor.
  
- Tema :: Informática
- Recorte :: Conocimiento general de la informática
- Enfoque :: Conceptos y curiosidades de la informática. Explicaciones de noticias actuales del tema.
  
- Audiencia :: Mayores de ~12 años, con conocimiento mínimo de la informática.
- Identidad Sonora :: Alegre, amena.
- Género :: Columna narrativa. Debates o entrevistas cortas.
- Formato :: Debate de 20'.
- Estructura :: Columna con introducción, desarrollo y conclusión.
  - Introducción motivada por una pregunta disparadora (P. ej. ¿qué es un algoritmo?)
  - Desarrollo con posible intervención de la personas presentes en el piso.
  - Conclusión que ofrezca una pregunta o moraleja para el público.
- Alojamiento :: Vivo por [[https://radiouncocalf.com][radio Universidad CALF 103.7 Mhz]] (FM).
  Internet como recorte de la columna.
- Distribución :: Radio en vivo. Es posible distribuir por Spotify, [[https://radiocut.fm/radiostation/uncocalf/][RadioCut]], página Web personal, open.audio u otra plataforma Funkwhale. Posiblemente, redes sociales (Mastodon y privativas).
- Identidad gráfica :: -
- Licencia :: Creative Commons + Reconocimiento + Compartir Igual 4.0 Internacional (CC-by-SA):
  http://creativecommons.org/licenses/by-sa/4.0/
  Ante modificaciones, se debe especificar la obra original y sus autores.
  


* Columna 13: ¿Qué es la minería de datos? 
\radio{} Emisión al aire: <2023-12-15 vie 15:00>

\warning{} Advertencia: La persona que conoce a en gran medida acerca de la correcta utilización de la minería de datos y KDD es lx estadísticx. Si bien, en carreras informáticas puede estudiarse ciertos contenidos, no necesariamente se focalizan en la investigación y ejecución de una gran cantidad de métodos existentes.

También, profesionales de diversas ramas pueden realizar especialidades, posgrados, maestrías y doctorados en varias universidades de nuestro país (Ejemplos: [[https://faeaweb.uncoma.edu.ar/posgrado/oferta-academica-posgrado/][en la FaEA de nuestra universidad]], [[https://www.ic.fcen.uba.ar/actividades-academicas/formacion/posgrados][en la UBA]], [[https://graduados.eco.unc.edu.ar/es/formacion/maestrias/mea-maestria-en-estadistica-aplicada][en la UNC]], [[https://face.unt.edu.ar/web/posgrados/posgrados/doctorado-en-estadistica/][en la UNT]]). Se puede buscar en el listado completo de carreras acreditadas en la página de [[https://global.coneau.gob.ar/coneauglobal/publico/buscadores/acreditacion/][CONEAU Global]].

Dichos profesionales son quienes debemos dirigirnos ante cualquier duda o inquietud acerca de este tema. Esta columna es solo una introducción para comprender de qué se trata a grandes rasgos, sin pretender ser exhaustivo ni formal.

(Y sí, a veces nos confundimos, pero la palabra "estadista" se refiere a la persona que conoce acerca del estado. La palabra adecuada para referirse a la persona que es especialista en estadística, se denomina: "estadísticx")

1. Sistemas y Bases de datos
   1. En nuestro trabajo, cuando hacemos algún trámite, pagamos nuestras cuentas, usamos sistemas.
   2. Redes sociales, chats.
   3. Cada texto, número, nombre, DNI, etc. se almacena en un lugar.
   4. Ese lugar son usualmente programas llamados Sistemas Gestores de Base de Datos.
   5. ¿Se imaginan cuántos datos se guarda en pocos días?
2. ¿Qué hay oculto en los datos? ¿Qué se hace con los datos?
   1. Una vez que tenemos muchos datos: ¿qué hacemos con ellos?
   2. Una de las preguntas es si hay algún patrón en los datos.
      1. Ese patrón puede cambiar con el tiempo.
   3. Si detectamos un patrón, ¿se puede predecir algo? ¿cuál es el error?
  
3. ¿Qué es la minería de datos?

   1. También lo llaman /Knowledge Discovery from Data/ (KDD)
   2. En la bibliografía se encuentra un definición:

      *Proceso por el cual se busca patrones en una gran cantidad de datos*.
   3. Aprendizaje, entrenamiento, son palabras muy utilizadas en este contexto.
            
4. El proceso KDD es:

   - Preprocesamiento, "limpieza" e integración de datos

     Se selecciona y se junta los datos necesarios. Se remueven datos mal ingresados o se cambian al formato que sea apropiado para los programas.
        
   - Procesamiento o minería de datos.

     Se utilizan métodos (posiblemente se ejecutan programas) para extraer patrones de los datos.

   - Evaluación y presentación.

     Identificar los patrones que se consideren interesantes.

   - Presentación del conocimiento.

     Se muestran visualizaciones y representación del conocimiento encontrado en el minado para los usuarios.
      
5. (Opcional) Técnicas

   1. Clasificación
      - Patrones frecuentes
      - Entre los datos, intentar deducir una de sus columnas.
      - Por ejemplo, si se guardaron todas las compras, se preguntó la edad, si es estudiante, si su crédito es bueno o no y si esa persona compró una computadora. 
   2. Detectar anomalías (otuliers)
      - Detectar datos que no siguen un patrón.
   3. Clustering
      - Agrupar datos. Crear grupos o clases.
   4. Otras técnicas...
6. ¿En dónde se utiliza?

   Las ramas de la informáticas y estadisticas usan KDD para investigar y extraer mucho conocimiento. También, profesionales en las empresas y la industria utilizan KDD.

   Algunos usos son:
   
   1. Algoritmos de sugerencias:
      1. ¿Qué clase de cliente es? Según su clase, ¿qué le gustaría?
      2. Evaluación de conformidad de productos y servicios
   2. Marketing:         
      1. Si se detecta que la mayoría de la gente cuando compra yerba mate y una bombilla, compra un mate...

         Un cliente compró yerba mate y una bombilla, entonces: ¡seguro quiere comprar un mate!

         Si mañana cambia, ¡sería genial que se adapte!
   3. Patrones en imágenes.
      1. Detectar rostros (/Face recognition/), paredes, números y letras (/Optical Character Recognition/, OCR).
      2. Detectar elementos interesantes en mapas: ríos, calles, etc.
   4. Patrones en la industria.
      1. Comportamientos de clientes: detectar temporadas baja/media/alta.
      2. Comportamientos de objetos: pozos petrolíferos
   5. Medicina
      1. Detectar posibles enfermedades según análisis de sangre, imágenes, historial médico, etc.
      2. Predecir posible evolución de un paciente, para que el médico determine posibles tratamientos.
   6. Investigación




   
Preguntas:

- ¿Piensan habitualmente en los datos que entregan? ¿en redes sociales? ¿en otros sistemas?
- ¿Se imaginan qué están haciendo con sus datos? 

  
** Bibliografía
- /"Introduction to Data Mining"/. Tan Steinbach Kumar. Pearson. Primera edición. 2014.
- /"Data Mining Concepts and Techniques"/. Jiawei Han, Micheline Kamber y Jian Pei. Morgan Kaufmann/Elsevier. Tercera edición. 2012.



* Columna 12: ¿Qué es la Web?
\radio{} Emisión al aire: <2023-12-01 vie 15:00>


#+caption: Screenshot del primer explorador Web.
[[https://www.w3.org/History/1994/WWW/Journals/CACM/screensnap2_24c.gif]]

1. Ya aprendimos qué es internet (e Internet). Pero, ¿cómo lo usamos? ¿Qué contenido se encuentra allí?
   - ¿Cuántas veces escribimos/leemos "www"? ¿qué es?
2. ¿Qué se imaginó Tim Bernerns-Lee?
   
   Tim Berners-Lee desarrolló varias tecnologías necesarias para la Web. De hecho: ¡desarrolló la primer página Web!
   
   1. Trabajaba en el CERN (del francés /Conseil européen pour la Recherche nucléaire/) Organización europea para la investigación nuclear.
   2. Se encontró con mucho contenido textual.
   3. Mucha gente que quería acceder a las investigaciones de sus compañeras/os.
   4. Pensó en vincular los textos de forma no lineal: Hipertexto, o sea ¡una red!.
   5. Sistemas vinculados de información, y el hipertexto (hoy en día es ese texto que hacés clics en las páginas, eso mismo).
   6. URL, HTML, HTTP, todas tecnologías que usamos para visitar cualquier página (sí, ¡Instagram también!).

   En una entrevista dijo:

   #+begin_quote
   ML: I'm interested that at what sense you began to sense the possibilities. You weren't thinking car rental, you weren't thinking blogging, I assume.

   TBL: Well in some ways. The idea was that anybody who used the web would have a space where they could write and so the first browser was an editor, it was a writer as well as a reader. Every person who used the web had the ability to write something. It was very easy to make a new web page and comment on what somebody else had written, which is very much what blogging is about.

   -- [[http://news.bbc.co.uk/2/hi/technology/4132752.stm][Entrevista de Mark Lawson a Tim Berners-Lee. 2005. BBC.]]  
   #+end_quote

   Traducción no oficial:
   
   #+begin_quote
   ML: Estoy interesado en qué sentido comenzaste a comprender las posibilidades. Asumo que no estabas pensando en alquileres de autos, tampoco en blogging.

   TBL: Bueno, en cierta forma. La idea era que cualquier persona que usara la web podría tener un espacio donde pudiera escribir y, por eso, el primer explorador era un editor, podía escribir como también leer. Cada persona que usara la web, tenía la habilidad de escribir algo. Era muy fácil hacer una nueva página web y comentar acerca de lo que otra persona ha escrito, lo que es muy parecido a lo que blogging se trata.

   -- [[http://news.bbc.co.uk/2/hi/technology/4132752.stm][Entrevista de Mark Lawson a Tim Berners-Lee. 2005. BBC.]]  
   #+end_quote

3. Web 1.0
   - Es un término nuevo, no es el que se designó.
   - Refiere al contenido que es producido por WebMasters y consumido por una mayoría de personas: Páginas estáticas.
   - Ejemplos: Diarios.     
4. Web 2.0 \leftarrow{} ¡Usted está aquí!
   - Contenido que es social: Redes sociales.
   - Producido por WebMasters, pero también por otras personas, y consumido por personas.     
     - El contenido de las redes, ¿quiénes lo producen mayormente?
     - Wikipedia, Redes, contenido colaborativo.
   - Algunas páginas exponen datos para consumo de otras aplicaciones.
5. Web Semántica (¿Pensaban que la próxima es "3.0"? \laughing{} )
   - Producido por WebMasters, por otras personas, y por programas/robots, y consumido por personas y programas/robots.
   - ¿Qué significa cada dato? \to{} Se agrega semántica.
     - Por ejemplo, una computadora recibe el dato 17, pero no sabe qué es...
       - Podría ser la edad de Virgi...
       - O podría ser la página actual del libro que está leyendo.
   - ¿Cómo obtengo datos de una página? \to{} Se incluye datos en un escrito, los sistemas exponen datos para consultar.
     - Los datos se pueden mezclar entre ellos.
   - Lógica, ontologías, grafos de conocimiento, conceptos interesantes...
6. Web3
   - No es la Web Semántica solamente: descentralizada + blockchain + Web Semántica + IA + ¿?
   - "Un ecosistema descentralizado en-línea basado en blockchain", fundador de Polkadot y Gavin Wood, co-fundador de Ethereum (criptomoneda).
7. Buscadores... WebMails (correos electrónicos)... Redes sociales... HomeBanking...
   - Funcionan con HTML, HTTP... ¡oh! Tecnología web.
   - Muhos servicios funcionan con programas y una página Web para consultarlos.


Preguntas:

Pero... ¿Cuánto del Internet usamos habitualmente? ¿Qué páginas visitás día a día? ¿cuánto contenido accedemos y por dónde?
¿cuánto contenido se imaginan que hay en Internet? ¿y en otras redes?

** Bibliografía
- "Information Management: A Proposal". Tim Berners-Lee, CERN. Marzo 1989.

  https://www.w3.org/History/1989/proposal.html

- "Berners-Lee on the read/write web". Entrevista de Mark Lawson a Tim Berners-Lee, BBC. 2005.
  
  http://news.bbc.co.uk/2/hi/technology/4132752.stm

- "The Semantic Web. A new form of Web content that is meaningful to computers will unleash a revolution of new possibilities". Tim Berners-Lee, James Hendler y Ora Lassila. 2001. Scientific American. doi:10.1038/scientificamerican0501-34

  https://doi.org/10.1038%2Fscientificamerican0501-34

- "World-Wide Web: The information universe". Tim Berners-Lee, Robert Cailliau, Jean-Fracois Groff, Bernd Pollermann. 

  https://www.w3.org/History/1992/ENRAP/Article_9202.ps

- "A Little History of the World Wide Web". World Wide Web Consortium (W3C).

  https://www.w3.org/History.html

- "The WorldWideWeb browser". Tim Berners-Lee.

  https://www.w3.org/People/Berners-Lee/WorldWideWeb.html
* Columna 11: ¿Qué es Internet?
\radio{} Emisión al aire: <2023-11-17 vie 15:00>

#+caption: Cables marítimos para interconectar redes.
#+attr_html: :alt  Cables martítimos de fibra óptica :align center
http://image.guardian.co.uk/sys-images/Technology/Pix/pictures/2008/02/01/SeaCableHi.jpg

** Guion

1. ¿Es internet o Internet? ...
   1. ¡NO! No es una cajita, no es el cable, no es ninguna red social, nope nope... bueno, solo un poco...
   2. Ahora vamos a ver qué son...
2. ¿Qué es internet?
   1. Una red de redes... ¿en serio? bueno... internet (con "i" minúscula) es el concepto teórico: tecnologías, diferentes tipos de conexiones, etc.
      - Supongamos que en un edificio se quiere conectar con otro: dos redes (una en cada edificio), un cable, un par de máquinas que conectan a ambos extremos: ¡et violà! internet.
   2. Del Wi-fi de tu casa, del de tu vecina y vecino, al servidor de mensajería instantánea (¡ese que usás en tu celular para chatear!).
      1. Cómo es una red local: el Wi-fi de tu casa, celus, cables de tus compus al router/modem ADSL.

         Velocidad: ¿1 Mega, 10 Megas... un poco más?
         
      2. Cómo es una red de redes... del Wi-fi de tu casa, al proveedor de Internet.

         Mucha más velocidad/capacidad: Supongamso 10 Megas \times{} cada cliente = ¿?

      3. Cómo es una red de redes, pero más troncal... del proveedor a otro proveedor mayorista.

         Muuuuucha más velocidad/capacidad: Supongamos 10 Megas \times{} total clientes \times{} proveedores = ¿?
         
         Las transimisones de los cables marítimos se miden en Tera bits por segundo (Tb/s): ¡1.000.000.000.000 de unos y ceros por segundo!
3. ¿E Internet?¿Qué es?
   1. Es la *implementación actual*: los cables y aparatos que ahora se están usando.

      Tu router conectado a tu proveedor, que se conecta a otro proveedor y este a otro de otro país y así.
   
   2. ¿Puede haber otra internet? \to{} *Sí, claro.*


4. ¿Cómo son los cables?
   
   \glassright{} Ver el mapa [[http://image.guardian.co.uk/sys-images/Technology/Pix/pictures/2008/02/01/SeaCableHi.jpg][The internet's undersea world]] 
   
   1. ¿fibra óptica? sí, ¡como unas cuantas dentro de un cable enorme!

   2. ¿Vieron cuántos cables salen de Argentina a... Japón? ¿por dónde pasan?

5. ¿Y en Argetina?

   REFEFO : Red Federal de Fibra Óptica

   \glassright{} Ver el mapa [[https://www.argentina.gob.ar/sites/default/files/mapa_refefo_dic_2021.png][de cobertura de la red federal]].
     
6. ¿Qué tiene que ver ARSAT con esto?

   ARSAT es un proveedor mayorista. Tiene dos satélites y gestiona también la fibra óptica del país.

   Satélites:
   
   - Provee TDA - Televisión Digital Argentina - sí, ¡los canales "abiertos"!... nada que ver con Internet, pero vale la pena decirlo.
   - Satélites brindan servicio conectando a Internet.

\thinkingface{} Para pensar: ¿Quién conecta todo? ¿qué pasa en las escuelas, municipios, hospitales, hogares, trabajos de ciudades lejanas? ¿cómo hacemos para que llegue la fibra óptica a toda la Argentina?

** Recursos

- The internet's undersea world. The Guardian.
  
  [[http://image.guardian.co.uk/sys-images/Technology/Pix/pictures/2008/02/01/SeaCableHi.jpg][http://image.guardian.co.uk/sys-images/Technology/Pix/pictures/2008/02/01/SeaCableHi.jpg]]

- The world's undersea internet cables - interactive. The Guardian.
  https://www.theguardian.com/technology/datablog/interactive/2012/feb/28/undersea-internet-cable-map-interactive

- Mapa de Cobertura de la REFEFO.
  https://www.argentina.gob.ar/jefatura/innovacion-publica/telecomunicaciones-y-conectividad/conectar/que-es-la-red-federal-de

  [[https://www.argentina.gob.ar/sites/default/files/mapa_refefo_dic_2021.png][https://www.argentina.gob.ar/sites/default/files/mapa_refefo_dic_2021.png]]

- Internet vs. internet (o interred). Se explica en el Capítulo 1 de "Redes de Computadoras" de Andrew S. Tanembaum  y David J. Wetherall. Pearson. 2012. Quinta Edición.

  Versión en inglés: "Computer Networks", Andrew S. Tanembaum and David J. Wetherall. Prentice Hall-Pearson. 2011. Fifth edition.

  
* Columna 10: ¿Qué es el voto electrónico? Parte 2
\radio{} Emisión al aire: <2023-11-03 vie 15:00>

** Guion

1. Repaso:
   1. *Calidad* o propiedades de la votación: Secreto, integridad, capacidad de auditoría y control, igualdad de condiciones para los partidos, universalidad, convalidación, usable.
   2. *Proceso de voto*: Emisión de voto \to{} Escrutinio en la mesa \to{} Generación de documentos \to{} Comunicación de resultados \to{} Procesamiento de resultados y publicación.
   3. *Sistemas de votación*: Boleta Partidaria, Boleta Única de Papel, Voto Electrónico.
2. Hablemos del Software
   1. Supongamos tres códigos fuentes de tres programas.
   2. \books{} (Pasarle los programas impresos a Mete y Virgi)

      Léanlos... *¿pueden decirme qué hacen?*

      Pero si los ciudadanos que votan, no pueden decirme qué hace... ¿confiarían entonces en que lo hace bien?

      A ver, veamos...
   3. ¿Les parece que hacen lo mismo? Probemos...

      En mi celular tengo un intérprete de PHP (ver más abajo para instalarlo), observemos los resultados de cada programa...
      
3. /Errare humanum est/ (/sed perseverare diabolicum/).

   Recordar, en la jerga de la programación: Error de software = "bug"; Sacar o buscar el bug: "debuggear"; Corregir un error rápidamente = "parchar".
   
   1. ¿Se puede remover todos los errores del software? \to{} Es una creación humana... por lo tanto... nope.

      Las técnicas de /testing/ utilizadas en desarrollo de software no eliminan todos los errores. Aún pueden haber algunos que no han sido contemplados: es difícil probar un software para absolutamente todas las posibilidades de uso.

      Inclusive, puede pasar que al corregir un bug, estemos introduciendo otro.
      
   2. ¿Todos los bugs se detectan? Tampoco, hay errores que se encuentran mucho tiempo después. 
   3. ¿Todos los bugs son igualmente peligrosos? No, no es lo mismo un error en una página Web, que un error en un satélite. Hay software que se prueba rigurosamente, y aún así se está alerta de cualquier inconveniente, para actualizar el software con los parches necesarios.

4. Recomendaciones al votar y al hacer escrutinio

   Si tenemos que votar con Voto Electrónico, entonces tomemos estas recomendaciones.

   1. Votantes, fiscales, presidentxs, autoridades, técnicos:

      *¡Utilicemos todas las instancias de validación y chequeo que se nos brinden!*
      
   2. Votante: *Chequear el voto* después de seleccionar en la pantalla. Leer y comprobar lo impreso y el contenido del chip de la boleta.
   3. Votante: Sacarse todas, absolutamente todas las dudas. Si es necesario, solicitar una máquina de prueba para aprender a utilizarla. 
   4. Votante: Informarse de la oferta electoral y corroborar que en la pantalla se ofrezca correctamente la oferta que debe aparecer en su mesa y su escuela.
   5. Votante: Doblar la boleta por donde está indicado. Esto oculta el voto de la vista de las personas y protege el chip que lo guarda.
   6. Técnicos: Recordar solicitar permisos y notificar a las autoridades de mesa y del establecimiento de las tareas a realizar y las ya realizadas.

      Corroborar cada paso antes de hacerlo.
   7. Presidentxs: Recordar a los votantes la validación del voto.
   8. Presidentxs: Recordar que hay una planchuela para la pantalla y conectores para auriculares para las *personas con discapacidad* visual.

      Informarse del procedimiento para asistencia de voto para las personas con discapacidad motriz, visual, etc.
   9. Autoridades: Validar que la máquina funcione bien en todo momento. Si es posible, *realizar controles* aleatoriamente de la máquina según indique el procedimiento para ello.

      Corroborar que está configurada correctamente asegurándose que *la oferta electoral y el número de mesa que figure en pantalla sea la correcta*.
   10. Fiscales: Durante el escrutinio, solicitar la fiscalización de los votos y *que se lea en voz alta* la boleta.
   11. Fiscales: Buscar la manera de evitar agolparse sobre la pantalla solicitando a la presidente la lectura y las pausas correspondientes para observar.
   12. Fiscales: Solicitar el *conteo manual* de las boletas.

5. Escrutinio definitivo:
   - Debatamos: con el voto electrónico, ¿se puede reproducir o recomponer de alguna manera lo que sucedió en el escrutinio provisorio? ¿qué necesitamos?
      
6. Entonces... La pregunta que todxs nos hacemos: ¿Cómo funciona el software?
   1. La respuesta que cualquier persona informática te puede decir: "ni idea" \shrug{}.
   2. ¿Tenés ganas de hablar de Javascript, HTML y tecnología Web? jaja.
   3. El software es muy maneable: se puede cambiar de un minuto para el otro.
   4. ¿Sabemos qué hace el software? \to{} habría que leer todo el código... y probar cada pedazo.
      1. ¿Tendrá fallas? \shrug{}
      2. ¿Una persona puede leer el código hecho por muchas otras?
   5. Auditorías para especialistas en seguridad de la información.

      Una auditoría de seguridad no es algo sencillo: hay de varios tipos (p. ej. test de intrusión/pentesting, auditoría Web, etc.), estándares (p. ej. ISO 27002, COBIT), hay varias personas entrenadas y dedicadas a varias tareas específicas, certificaciones que deben tener y cumplir, etc.

Volviendo a las moralejas:
- ¿no sería lo mejor debatir en qué contexto y cómo incorporar una nueva tecnología infomática?
- ¿han pensado en los riesgos si ésta falla?
- Con la información que les es muy importante: ¿piensan qué hacer para mitigar algún inconveniente si sucede? (p. ej.: si les falta Internet y no pueden acceder a ella, si el programa no responde como se espera o si se modifica o borra inesperadamente).

** Programas
Para ejecutar los programas en un celular, se requiere de una terminal y un intérprete de PHP. 

1. instalar termux (ver https://termux.com/).
2. Ejecutar en la terminal: =pkg install php= 

#+caption: Programa 1
#+BEGIN_SRC php
  <?php

  # Licencia del programa: GNU Affero General Public License version 3 (GPLv3).
  # Ver https://www.gnu.org/licenses/agpl-3.0.html para más información.

  $partidos = ['mejor es messi', 'mejor es diego', 'mejor es mariana'];

  function contar_votos($lst_boletas, $partido) {
      $conteo = 0;
      foreach ($lst_boletas as $boleta){
          if ($boleta['partido'] == $partido) {
              $conteo ++;
          }
      }

      return $conteo;
  }

  function mostrar_votos($lst_boletas, $partido) {
      $total = contar_votos($lst_boletas, $partido);
      echo "Votos $partido: $total\n";
  }

  # Supongamos que se realizó el conteo...

  $mis_boletas = [['partido' => 'mejor es messi'],
                  ['partido' => 'mejor es mariana'],
                  ['partido' => 'mejor es diego'],
                  ['partido' => 'blanco'],
                  ['partido' => 'mejor es mariana'],
                  ['partido' => 'mejor es messi'],
                  ['partido' => 'mejor es mariana'],
                  ['partido' => 'mejor es diego'],
                  ['partido' => 'mejor es mariana']];

  # Hora de contar votos

  foreach ($partidos as $partido){
      mostrar_votos($mis_boletas, $partido);
  }

  mostrar_votos($mis_boletas, 'blanco');
#+END_SRC

#+caption: Programa 2
#+BEGIN_SRC php
  <?php

  # Licencia del programa: GNU Affero General Public License version 3 (GPLv3).
  # Ver https://www.gnu.org/licenses/agpl-3.0.html para más información.

  $partidos = ['mejor es messi', 'mejor es diego', 'mejor es mariana'];

  function contar_votos($lst_boletas, $partido) {
      $conteo = 0;
      foreach ($lst_boletas as $boleta){
          if ($boleta['partido'] == $partido) {
              $conteo ++;
          }
      }

      return $conteo;
  }

  function mostrar_votos($lst_boletas, $partido) {
      $total = contar_votos($lst_boletas, $partido);
      echo "Votos $partido: $total\n";
  }

  # Supongamos que se realizó el conteo...

  $mis_boletas = [['partido' => 'mejor es messi'],
                  ['partido' => 'mejor es mariana'],
                  ['partido' => 'mejor es diego'],
                  ['partido' => 'blanco'],
                  ['partido' => 'mejor es mariana'],
                  ['partido' => 'mejor es mesi '],
                  ['partido' => 'mejor es mariana'],
                  ['partido' => 'mejor es diego'],
                  ['partido' => 'mejor es mariana']];

  # Hora de contar votos

  foreach ($partidos as $partido){
      mostrar_votos($mis_boletas, $partido);
  }

  mostrar_votos($mis_boletas, 'blanco');
#+END_SRC

#+caption: Programa 3
#+BEGIN_SRC php
  <?php

  # Licencia del programa: GNU Affero General Public License version 3 (GPLv3).
  # Ver https://www.gnu.org/licenses/agpl-3.0.html para más información.

  $partidos = ['mejor es messi', 'mejor es diego', 'mejor es mariana'];

  function contar_votos($lst_boletas, $partido) {
      $conteo = 0;
      foreach ($lst_boletas as $boleta){
          if ($boleta['partido'] = $partido) {
              $conteo ++;
          }
      }

      return $conteo;
  }

  function mostrar_votos($lst_boletas, $partido) {
      $total = contar_votos($lst_boletas, $partido);
      echo "Votos $partido: $total\n";
  }

  # Supongamos que se realizó el conteo...

  $mis_boletas = [['partido' => 'mejor es messi'],
                  ['partido' => 'mejor es mariana'],
                  ['partido' => 'mejor es diego'],
                  ['partido' => 'blanco'],
                  ['partido' => 'mejor es mariana'],
                  ['partido' => 'mejor es messi'],
                  ['partido' => 'mejor es mariana'],
                  ['partido' => 'mejor es diego'],
                  ['partido' => 'mejor es mariana']];

  # Hora de contar votos

  foreach ($partidos as $partido){
      mostrar_votos($mis_boletas, $partido);
  }

  mostrar_votos($mis_boletas, 'blanco');
#+END_SRC

* Columna 9: ¿Qué es el voto electrónico?
\radio{} Emisión al aire: <2023-10-20 vie 15:00>

** Guion
¿Es fácil un proceso de votación? A ver... veamos...

1. ¿Quiénes participan?

   Votantes, autoridades, partidos políticos, proveedores del proceso electoral, otros poderes del estado (legislativo, ejecutivo, provinciales...)

2. Calidad o propiedades de la votación:
   1. *Secreto del voto*: debe garantizarse... ¡y hasta ser evidente! ¿por qué?
      1. Pueden motivarte, amenazarte, extorsionarte, etc. a votar a un candidato determinado.
   2. *Integridad*:
      1. Capturar la intención devoto fehacientemente y sin sesgo.
      2. Registrar la intención de voto.
      3. Contabilizar el voto exactamente como fue registrado.
   3. *Capacidad de auditoría y control del proceso.*
   4. *Igualdad de condiciones para todos los partidos*.
   5. *Universalidad*: Permitir votar a la ciudadanía inscripta en el padrón.

      Accesibilidad.
   6. *Convalidación*: Análisis de datos posterior.
   7. *Usable* para todxs lxs participantes.
   
3. Proceso de votación:
   1. Emisión del voto \to{} Escrutinio en la mesa \to{}  Generación de documentos \to{} Comunicación de resultados \to{} Procesamiento de resultados y publicación

      ¡Aún no hablamos del escrutinio definitivo!

   2. Sistemas de emisión de voto: Boleta Partidaria (BP), Boleta Única de Papel (BUP) y Voto Electrónico/Boleta Electrónica.

4. ¿Qué componentes puede tener una máquina de voto electrónico?
   Pensemos... ¿qué necesita tener una máquina para poder votar?

   1. Pantalla.
   2. Un CPU para generar la información.
   3. Datos: partidos políticos, interfaz gráfica.
   4. Programas: ¿varios lenguajes? \to{} Posiblemente: C/C++ para controlar los dispositivos.
      1. ¡Un Sistema Operativo! \to{} ¿Linux? ¿Open/Free BSD? ¿Windows? ¿Otro?
      2. Programas que controlan la impresora, pantalla, teclado/tactil (drivers/controladores).
      3. Entorno para la interfaz (Web, Qt, GTK, otro).
      4. Desarrollo backend (debajo de la interfaz) \to{} almacenamiento no sería necesario.
   5. Impresora
   6. Un dispositivo para escribir y otro (o el mismo) para leer el chip NFC.
   7. Disco rígido/almacenamiento interno \to{} No es necesario.
   8. Memoria RAM \to{}  ¡Obviamente!
   9. Conexión y placa de Red \to{} Depende de la comunicación de resultados.
   10. USB \to{} No es necesario.
   11. Batería \to{} Sí, por las dudas.
   12. Cables \to{} Sí, y lo más largo que se pueda.
   13. Carcaza/cobertor bien aislado y protegido \to{} ¿Qué sería eso? ¿se puede?
   14. Accesibilidad. Placa de sonido \to{} parlantes para emitir sonidos.
      
5. Consecuencias de su uso.
   1. ¿Podemos decir que mantiene el secreto al voto? \to{} \shrug{}
   2. ¿Podemos asegurar que todas las máquinas funcionan igual y no fueron alteradas? \to{} Necesitamos un técnico en cada sector para chequear las máquinas... y chequear de forma seguida.
   3. Nos dejamos estar: la máquina hace todo, y rápido... pero ¿se controla?
   4. ¿Todas las personas saben usarla? ¿Todas las personas pueden usarla?
   5. Es muy difícil explicar: ¿entendieron algo? ¿Qt? ¿Interfaz gráfica? ¿NFC?
      1. ¿Cómo le explico a cada persona el funcionamiento? 

\thinkingface{} Preguntas (¡prohibido usar ChatGPT para responderlas!):

- ¿Les parece que cualquier *tecnología* ya existente dejó de servir o ya no ayuda? ¿Que siempre debemos cambiarlas por computadoras o programas?

- ¿Les parece que deberíamos comprender y debatir lo que se hace con las computadoras, la informática y los dispositivos electrónicos?
  Especialmente en procesos que nos afectan a la ciudadanía completa (IA, cámaras, celulares, redes sociales, etc.).

  ¡Hablamos de *soberanía tecnológica* un una columna anterior!

** Bibliografía

- "Análisis de factibilidad en la implementación de tecnología en diferentes aspectos y etapas del proceso electoral". Consejo Nacional de Investigaciones Científicas y Tecnológicas (CONICET). 2017.
  https://www.conicet.gov.ar/wp-content/uploads/Analisis_factibilidad_implementacion_tecnologia_proceso_electoral.pdf

Más material interesante para leer:

- \books{} Informes del Observatorio Electoral de la Universidad Nacional del Comahue.

  https://observatorioelectoral.uncoma.edu.ar

  Descripción de las máquinas del sistema de Boleta Única Electrónica (BUE) utilizado en Neuquén observado en la audiencias brindadas por el Juzgado Electoral:

  https://observatorioelectoral.uncoma.edu.ar/?p=1216

- "Vot no". Nicolás D'Ippolito. El gato y la caja.

   https://elgatoylacaja.com/vot-no

- \books{} "Voto Electrónico. Una solución en busca de problemas". Beatriz Busaniche. Fundación Vía Libre. 2017.
  https://www.vialibre.org.ar/divulgacion/libro-voto-electronico-una-solucion-en-busca-de-problemas/

- "Alemania: urnas electrónicas anticonstitucionales". Fundación Vía Libre. 2009.

  https://www.vialibre.org.ar/alemania-urnas-electronicas-anticonstitucionales/

* Columna 8: ¿Qué es el blockchain?
\radio{} Emisión al aire: <2023-10-06 vie 15:00>

#+caption: Una "granja minera" de computadoras de Islandia.
#+attr_html: :alt ARSAT Estación terrena Benavídez :align center
[[https://upload.wikimedia.org/wikipedia/commons/3/37/Cryptocurrency_Mining_Farm.jpg]]

En estas semanas escuchamos acerca de "peso digital", "criptomonedas", "blockchain"... pero ¿qué significa? ¿cómo funciona?
Por ello, para no hacernos más confusión y comprender todos estos temas, decidimos contarte acerca del blockchain, cómo funciona y qué relación tiene con las criptomonedas. Con estos conceptos un poco más claros, podemos comprender más la idea propuesta del peso digital.

\framedpicture{} Imágen: Cryptocurrency mining farm - Bajo licencia Creative Commons Atribución-CompartirIgual 4.0 Internacional (CC-by-SA 4.0). Obtenido desde [[https://commons.wikimedia.org/wiki/File:Cryptocurrency_Mining_Farm.jpg][Wikimedia Commons]].

** Guion
1. Creación e idea:
   1. Moneda digital: Sí, no hay nada físico excepto tu celu o la compu.
   2. *Satoshi Nakamoto* propone el primer blockchain (Bitcoin) en *2009*.
   3. Objetivos:
      - *Peer-to-peer* (de "persona" a "persona" o transferencia directa).
      - *Sin instituciones financieras intermediarias*.
2. \bank{} ¿Cómo funcionan los bancos ahora?
   - Tienen un libro contable (digital o no): toda transferencia se escribe allí.
   - Controla y regula. Busca brindar garantías y seguridad de que se cumpla la ley.
   - Balance: si se retira dinero de un lado, y se suma a otro, debe haber un equilibrio.
3. ¿Cómo se les ocurriría implementar una moneda digital?
   Intentemos crear una moneda digital... ¿qué hace falta? ¿firmas digitales? ¿un documento? ¿qué datos habría que almacenar?
   
   1. *Double-spending problem* (problema del "doble-gasto").

      ¡No se debe poder gastar la misma moneda!

      ¿Pueden comprar dos cosas diferentes con un mismo billete?
   2. Debe quedar registrada la transacción.
   3. Una vez registrada, no se debe poder cambiarse.
   4. Debe poder ser validada.
4. \coin{} Un *Blockchain* debe ser:
   1. Descentralizado y distribuido \to{} Un programa que funciona en muchas máquinas.
   2. Actúa como un libro/registro contable.
   3. Una *cadena de bloques* con datos (los datos son las transacciones).
   4. No deben poder ser alterados.
   5. Cada bloque debe poder ser validado \to{} deben ser públicos.
5. ¿Cómo funciona una *transacción digital*?
   Para una persona que conoce un libro contable, es muy probable que entienda rápidamente el concepto de blockchain.
   
   1. Supongamos que mágicamente tengo 1₿ (¡ojalá!), y se lo quiero dar a Virgi (primer transacción).
   2. En el registro se guarda: el número de Virgi, y mi firma de que se lo paso a ella.
   3. Supongamos que Virgi se lo pasa a Mete (segunda transacción).
   4. En el mismo registro se guarda: el número de Mete, la firma de Virgi de que se lo pasa a él.
   5. ¿Y la moneda? \to{}  Son las transacciones de ella. No hay token ni nada de ella, solo una cantidad.

   Opcional: ¿cómo se genera la primer transacción? O sea, en el ejemplo, ¿cómo obtuve 1₿?
   - La persona que crea un bloque correctamente se le paga una compensación.
   - Cada bloque tiene una transacción inicial que le asigna una X cantidad de Bitcoins al creador.
   - La pregunta es: ¿cómo se gestiona la cantidad de monedas? \to{} ¡Hay que hablar de las /Proof of Work/ y /Proof of Stake/!
6. Un *bloque* contiene:
   - Muchas transacciones (datos).
   - Datos de su creación.
   - El número que identifica al bloque anterior.
   - Una validación del bloque anterior.
   - Dependiendo del consenso: la solución al problema difícil o la firma digital del creador.
   - Una vez aceptado el bloque por la mayoría, sus transacciones se confirman.
7. (Opcional) Métodos de consenso
   Recordemos que el Blockchain es distribuido: todas las máquinas tienen una copia.
   
   Debe haber una forma de validar y consensuar que un bloque es correcto y que se agrega al blockchain.

   Estos métodos se llevan a cabo por programas: ¡supongamos que todos tienen el mismo programa!
   
   1. /Proof of Work/ (PoW)
      1. Se requiere un *trabajo complejo*: "difícil" de generar la solución, "fácil" de validarla.

         Difícil \equiv{} Mucha computación

         Fácil \equiv{} Muy poquita computación

         En otras palabras ¡un problema de complejidad NP-hard!... ¿NP what?... ¡para la próxima columna!
      2. La computadora que encuentre la solución, distribuye el bloque nuevo: las otras validan y lo agregan.
      3. *Mineros*: Computadoras que crean (minan) bloques (buscan la solución al problema complejo).
   2. /Proof of Stake/ (PoS)
      1. La computadora creadora del bloque, "*forger",* se designa aleatoriamente o bajo un criterio.
         - Debe poner un capital de riesgo \moneybag{}: plata en la misma criptomoneda.
      2. El resto validan si el forger hace un buen trabajo (puede ser seleccionado aleatoriamente).

         Si el forger es deshonesto, se le quita el capital de riesgo.
   3. Diferencias:
      - PoW requiere mucha computación \to{} mucha electricidad \to{} impacto ambiental.
      - PoW genera los bloques muy lentamente \to{} las transacciones se confirman mucho después de hechas.
      - PoW no controla la emisión de moneda, PoS sí puede controlarla.      
8. (Opcional) Seguridad del blockchain       
9. Smart contracts
   1. ¿qué pasa si agregamos más datos al bloque? Un programa, y por ejemplo: datos de una venta de cannolis.
   2. El programa: es un "contrato", contiene criterios para realizar una tarea, ej.:
      1. Si tenés X plata en la billetera del cliente, y hay stock de cannolis para vender, entonces concretar la transacción.
      2. Caso contrario, no realizar la transacción.

** Bibliografía y otros recursos
- "Bitcoin: A peer-to-peer electronic cash system". Satoshi Nakamoto. 2009.
  
  https://bitcoin.org/bitcoin.pdf
  
- https://en.bitcoin.it/wiki/Proof_of_Stake
- Poelstra, Andrew. (2015). On Stake and Consensus.

  https://nakamotoinstitute.org/research/on-stake-and-consensus/

- https://lisk.io/academy/blockchain-basics/how-does-blockchain-work/proof-of-stake

- https://web.archive.org/web/20150127033542/https://cointelegraph.com/news/113157/proof-of-work-proof-of-stake-and-the-consensus-debate

Curiosidades:

- https://cryptowat.ch/
- https://coinmarketcap.com
- https://txstreet.com
- https://developers.eos.io/welcome/latest/getting-started-guide/local-development-environment/index
* Columna 7: ¿Qué es la soberanía tecnológica? (¿y por qué es importante?)
\radio{} Emisión al aire: <2023-09-22 vie 15:00>

\headphone{} Recorte en RadioCut aún no disponible.

#+caption: Estación Terrena Benavídez, donde se operan los satélites ARSAT, la Red Federal de Fibra Óptica, entre otros servicios.
#+attr_html: :alt ARSAT Estación terrena Benavídez :align center
[[https://upload.wikimedia.org/wikipedia/commons/thumb/c/c6/Estaci%C3%B3n_Terrena_Benav%C3%ADdez_01.jpg/800px-Estaci%C3%B3n_Terrena_Benav%C3%ADdez_01.jpg]]

Encontramos tecnología alrededor nuestro: En nuestro trabajo, en nuestra casa, en nuestra vida cotidiana, en las calles, incluso en el espacio. Dispositivos electrónicos y digitales, software y hardware, todas tecnologías que están para brindarnos algún servicio o para poder usar alguna herramienta. ¿Pensamos alguna vez si estas tecnologías están bajo nuestro control? ¿bajo el control del estado o de la población que los usa?
En esta columna charlamos un poco del concepto de *soberanía tecnológica*. Un concepto un tanto abstracto aunque muy relevante, para tomar conciencia de lo importante que es tener soberanía sobre el hardware y software que nos rodea.

\framedpicture{} Imágen: Estación Terrena Benavídez por BugWarp - Bajo licencia Creative Commons Atribución-CompartirIgual 4.0 Internacional (CC-by-SA 4.0). Obtenido desde [[https://commons.wikimedia.org/wiki/File:Estaci%C3%B3n_Terrena_Benav%C3%ADdez_01.jpg?uselang=es][Wikimedia Commons]].

** Guion
#+begin_quote
soberanía

1. f. Cualidad de soberano.
2. f. Poder político supremo que corresponde a un Estado independiente.

[[https://dle.rae.es/soberan%C3%ADa][-- Diccionario de la Real Academia Española]]
#+end_quote


# 1. Contar la anécdota que tuve con mi celular: mi programa para mi celular, para que se conecte automáticamente no funcionó. Esto me llevó a hablar hoy de soberanía tecnológica.
#
#    ¿Por qué... ? cuando terminemos, les cuento...
    
1. Ejercicio mental: ¿se imaginan nuestro país sin informáticos pero... solo en nuestro país?

   ¿Cómo haríamos lo siguiente?
   
   - Comunicaciones:
     - Internet \to{} comunicación, redes sociales.
     - Compartir documentos.
     - Servidores en las instituciones: ¿quiénes manejan las computadoras?
     - Correos electrónicos, páginas Webs: ¿otras personas nos crean nuestros contenidos por nosotros?
   - Programas y sistemas informáticos.
   - Robótica en la industria.
     - Industria tecnológica: elaboración de electrodomésticos, autos.
   - Medicina, estado, industrias varias.
   - Satélites \to{} pronósticos meteorológicos, Internet.
   - Seguridad, defensa y soberanía territorial: Cámaras de vigilancia, comunicaciones.
   - Imaginemos que:
     - incluimos especialistas en administración de redes y servidores.
     - incluimos especialistas en programación
     - incluimos especialistas en electrónica.
     - incluimos especialistas en seguridad.
       
2. Ejercicio mental: ¿se imaginan si no hay hardware, servidores, satélites, fibra óptica y/o cable que transporten datos, etc.?
   1. Imaginemos: para que Argentina se conecte a Internet hay un solo cable, que pasa por X país.
   2. Imaginemos: No hay ARSAT, ¿quién ocupa esa órbita? ¿qué hacen con ella?
   4. Imaginemos: No hay industria electrónica, ¿cómo conseguimos nuestras heladeras? ¿a qué precio?
      
3. Palabras claves: soberanía, tecnología, disruptivo, dependencia tecnológica.
   1. *disruptivo*: Más palabras claves: revolución, cambios, caótico, ausencia de predictibilidad, obsolescencia de tecnologías viejas, reestructuración.

      ¿Se acuerdan del COVID-19 y ChatGPT? ¿nos preguntamos qué efectos tendrá?

   2. *dependencia tecnológica*: ¿qué puedo hacer con esa tecnología? ¿qué hacen detrás de la tecnología que dependo? ¿qué pasa si deja de funcionar?

      Pensemos... nuestros archivos en la nube: es muy útil... pero:

      - ¿qué pasaría si necesito escanear mis archivos para buscar algo muy específico?
      - ¿qué pasaría si pierdo acceso a esa cuenta o se cae ese sistema?
      - ¿qué pasaría si hay datos muy sensibles acerca de donde trabajo?
      - ¿qué pasaría detrás de los servidores? ¿pueden usar esos archivos?
       
4. Soberanía digital (software, datos + programas):
   1. Supongamos que usamos un programa que no fue hecho por ninguna entidad argentina. Además, le proveemos datos de qué hacemos todos los días.
      1. Privacidad: ¿Quiénes tienen acceso a esa información? Administradores del sitio, dueño de la entidad, etc.
      2. ¿Qué pasa si queremos borrar nuestra cuenta?
      3. ¿Qué pasaría si quisieramos recuperar nuestros datos? ¿y si quisieramos sabe qué hacen con ellos?
   2. *PRISM* evidenciado por Edward Snowden generó controversia: ¿soberanía tecnológica o de la información? ¿cómo afecta a la privacidad de la ciudadanía?
      
      Existen un amplio debate si optar entre privacidad en la información, por ejemplo, cifrando conexiones; o la soberanía en la tecnología en sí: conexiones propias, prácticas, equipos.
      
   3. Más debates en varios países, por ejemplo: ¿políticas nacionales o políticas geolocalizadas referidas al uso de la tecnología?

      Por ejemplo, un cable que conecta a Internet: ¿es mejor que un país use el propio o que tenga políticas geolocalizadas con países vecinos?
      
5. Aprender tecnología e informática es importante \to{} *¿podemos controlar algo si no sabemos cómo se usa o cómo funciona?*
   1. A veces está bien no saber cómo funciona todo, pero...

      ¿nunca llevaste a arreglar la compu a un técnico?

      ¡alguien tiene que entender cómo funciona!

   2. Acceso a la información y la educación \to{} ¿qué pasaría con la soberanía tecnológica si no hay acceso a la educación?

      ¿se acuerdan de "IBM go home"? ¿por qué los estudiantes pedían aprender más computación y no solo a usar la IBM?
      
   3. Estado y la gente \to{} Acceso a la información y al software.
      - ¿Software y hardware libre? \to{} ¡Cambiar, modificar, aprender, reusar!
      - P. ej.: Imagínense que para obtener un documento "público" del estado, debemos tener una computadora y pagar una "licencia" ¿quiénes pueden acceder?

        Por cierto: ¿probaron [[https://www.libreoffice.org/][LibreOffice]]? ¿por qué pagar licencia cuando tenés una opción software libre y con todas las características de la paga?
        
6. Industria nacional y derecho a Reparar:
   1. ¿Se preguntaron cómo funciona las cosas que usamos?
   2. ¿Cómo conseguir equipos? ¿Cómo conseguir repuestos?
   3. ¿Y qué sucede con la Obsolescencia programada...?
      
# 7. Entonces, una computadora (mi celular) ejecuta pasos, o mejor dicho órdenes (algoritmos). Pero, ¿qué pasa si no tenemos control de dicha computadora? Si le damos una orden y no funciona...
# 
#    ¿hemos pensado si tenemos control de los artefactos que nos rodean? ¿sabemos qué hacen? ¿sabemos qué hacen con nuestros datos? ¿y a nivel país?

Pensemos:
¿Qué tecnologías dependemos en nuestro día a día?
Y de esas tecnologías: ¿Cuáles tenemos a nuestro alcance como argentinos?
¿Conocemos las tecnologías que se desarrollan y desarrollaron en nuestro país?
¿Qué control o gestión tiene la ciudadanía y el estado de esas tecnologías?

** Bibliografía
- "NSA Prism program taps in to user data of Apple, Google and others", Glenn Greenwald and Ewen MacAskill, 2013.

  Explicación del programa PRISM.

  https://www.theguardian.com/world/2013/jun/06/us-tech-giants-nsa-data

- " "All your Internet are Belong to Us": On Nation States’ Claims of Sovereignty over ICT Architecture and Contents". Miguelángel Verde Garrido. Berlin Forum on Global Politics. 2016.

   https://bfogp.org/blog/2016-04-all-your-internet-are-belong-to-us-on-nation-states-claims-of-sovereignty-over-ict-architecture-and-contents/

- "¿Por qué es importante la soberanía tecnológica?". Pablo Carrai. Artículo en Educ.Ar.
  
  https://www.educ.ar/recursos/155423/por-que-es-importante-la-soberania-tecnologica

- "Relaciones entre soberanía y tecnología en los tiempos de Internet". Ariel Sabiguero, /et al/.  Revista de la Facultad de Derecho. ISSN 0797-8316 e ISSN 2301-0665. 2016.
  
  http://www.scielo.edu.uy/scielo.php?script=sci_arttext&pid=S2301-06652016000200011

  https://doi.org/10.22187/rfd2016211

* Columna 6: Manuel Sadosky, "IBM go home" y más - 2da parte         :ATTACH:
:PROPERTIES:
:ID:       59d9d7da-7dce-46ef-8c20-b656db6ec771
:END:
\radio{} Emisión al aire: <2023-09-08 vie 15:00>

\headphone{} [[https://radiocut.fm/audiocut/columna-6-cristian-gimenez-manuel-sadosky-ibm-go-home-2da-parte-yo-no-fui-08-09-2023/][Recorte en RadioCut.]]

#+caption: Personal operando la computadora Clementina.
#+attr_html: :alt Foto del personal operando la computadora Clementina  :align center
[[file:data/59/d9d7da-7dce-46ef-8c20-b656db6ec771/clementina.jpg]]

La vez pasada hablamos de Sadosky, la primer computadora en nuestro país y la nefasta noche de los bastones largos, pero... ¿y después? ¿qué pasó?

A eso venimos hoy, a contarte qué sucedió después. Algunas cosas que valen la pena recordar que sucedieron entre los 70' y los 90'. 

\framedpicture{} Imágen proveniente del artículo "Clementina, la primera computadora en la Argentina" de Lucas Delgado. Artículo bajo la licencia CC-by-NC-SA. URL: https://www.educ.ar/recursos/118069/clementina-la-primera-computadora-en-la-argentina.


** Guión

1. Repaso rápido:
   - Reforma universitaria: movimiento estudiantil del 1918 para reformar la universidad, buscan:
     - Autonomía del poder político, gobierno representado por estudiantes y docentes, asignación por concursos públicos, libertad de pensamiento.     
   - Resumen de la vida de Sadosky:
     - Sadosky nace el 13 de abril de 1914, cursó primaria y secundaria en la Escuela Normal Mariano Acosta (si no entiendo mal, es una escuela pública). En 1940 se graduó como Doctor en Ciencias Fisico-Matemáticas de la UBA y ejerció la docencia en la Universidad de La Plata.
     - Publicó libros
   - Hablamos de Instituto del Cálculo y Clementina, la primer computadora.

   - *Se compró una Mercury Ferranti* que llegó en 1960. 152.099 libras esterlinas, (equivalen a  USD 4.500.000 en el 2011).
   
     ¿Vamos de compras en 1960?
   
     - Ultrathin (?): 18 metros y medio de largo, media tonelada de peso.
     - Rápida (?): Tres horas para encender.
     - Fácil de instalar (?): Red eléctrica distinta a la convencional.
     - ¿Gigas de RAM DDR5? Nah, de válvulas mejor: 1K de palabras de 48b = 4750 Bytes = ~4Kb
     - ¿Disco rígido sólido? ¿para qué?: Disco de tambores magnéticos, 4 tambores de 8K cada uno.
     - ¿Monitor de 500 pulgadas? Ni ahí: Entrada/Salida con cinta de papel perforado, impresora 30 caracteres por segundo. Pero le adaptaron un lector de tarjetas perforadas *nacional*.
     - ¿Teclado? ¿para qué? nah, no tiene.
     - Un parlante (con musiquita de "Oh my darling, Clementine").    
     - ¿Windows 60'? No, no... Programas: Ensamblador orientado al cálculo, Autocode.
       - Luego, se creó el compilador y lenguaje COMIC en Argentina gracias a Liana Lew, Noemí García, Wilfred Durán, Ana Zoltran Torres, Clarisa Cortés.

2. Repaso rápido: ¿Para qué se usaba?
   
   Se usaba para cálculos matemáticos: pautas en el sistema de ahorro y préstamos, estudio de ríos patagónicos, cálculos astronómicos (órbita del cometa Halley), censos comerciales, análisis del funcionamiento de reactores nucleares, investigaciones cardiológicas, traducciones (ruso-español). 
   
   Encargada de programarla: *Cecilia Berdichevsky*, primer programadora Argentina.
     
3. En esa época: ¿Quién tenía idea de cómo programar esta computadora? \to{} Se fundó el *Instituto del Cálculo* en 1962.
   
   - Primer carrera de informática: "Computador Científico".
   - Autocode: un sistema para la Ferranti Mercury - 1961
     - \books{} Leer los agradecimientos de la nota preliminar del manual de Autocode de García Camarero del IC (ver Bibliografía):
       
       /"Hemos de agradecer la paciente y minuciosa lectura de nuestra primera redacción, así como sus múltiples puntualizaciones, a la Dra. Cicely M. Popplewell. También agradecemos la valiosa colaboración de la Dra. R.Ch. de Guber [Dra. Rebeca Guber]. Buenos Aires, octubre de 1961" -- E. García Camarero/

     - *Cicely Popplewell*
       - ¡Trabajó directamente con Alan Turing diseñando el lenguaje de la Ferranti Mark 1!
       - Dió el primer curso de programación en Argentina.
   - COMIC (Compilador del Instituto del Cálculo): Lenguaje de programación creada por IC - 1965
     - Autocode podía mejorarse.
     - Wilfred Durán realizó ingeniería inversa del Autocode.
     - Mejoraba: nombres de variables y manejo de matrices.
     - *Primer software de base* argentino.

4. La Universidad de Buenos Aires (UBA) Y la Universidad del Sur (UNS) quisieron hacer su computadora:
   - UBA: La Computadora Electrónica de la Facultad de Ingeniería de la Universidad de Buenos Aires (CEFIBA, 1962) a cargo del Ing. Humberto Ciancaglini.
     - Inaugurada a poco menos de cuatro años de iniciado el proyecto.
     - La idea era preparar a jóvenes para sistemas digitales electrónicos.
   - UNS: la CEUNS (1962) a cargo del Ing. Jorge Santos \to{} Procesaba con números racionales.

5. ¿Qué pasó luego? *La noche de los bastones largos* (29 de julio de 1966, en dictadura de Onganía).
   1. Intervencion de las Universidades Nacionales.

      Humillados violentamente: estudiantes, docentes y graduados, los retiraron a la fuerza del edificio, y afuera, los hacían pasar uno a uno para pegarles con palos o culatas.

      ¿Por qué los militares hicieron eso?
      
   2. Docentes, alumnos y graduados, hasta Warren Ambrose, profesor del MIT y de la UBA, fueron detenidos.
   3. Renuncias y éxodo de investigadores - *Fuga de cerebros* . Sadosky se exilió más tarde, en ~1974.
   4. El IC, Clementina y la carrera de Computador Científico se fue dejando de lado hasta su término. *Agonía de Clementina*: baja inversión para reparaciones hasta su cierre definitivo en 1970.
   5. Sucesivas protestas estudiantiles y represión. Policías en aulas y pasillos.
   6. Prohibidas reuniones en la facultad.
   7. Clementina deja de funcionar y la computación entra en una época oscura por varios años.
      
6. ¿Qué pasó luego de la noche de los bastones largos? *IBM Go Home* (1966-1971)

   Gobierno: Dictadura de Juan Carlos Onganía.
   
   - Vacío en las universidades \to{} plantel cubierto por profesionales de IBM.
   - Cambios en la carrera \to{} Se hicieron apéndice de la multinacional.
      1. Antes se enseñaba a programar en Mercury e IBM \to{} Pasó a enseñarse solo IBM.
      2. No hubo una reforma curricular \to{} Fue implícito.
      3. Clementina no pudo ejecutar los programas de los estudiantes \to{} aparece la frase *"no hay computadora para los alumnos"*.
      4. Cada marca proveía su propio Hardware y su Software \to{} ¡Dependecia a la marca!
      5. Clementina deja de funcionar en 1970.
   - En 1971 se produjo una huelga de estudiantes (de distintas alineaciones políticas) para cambiar la currícula. Pedían: 
      1. Aprender contenido más general.
      2. A utilizar equipos de varias marcas.
      3. Tener el nivel para desarrollar todo el software de base.

   Conclusión personal: Actualmente, la carreras informáticas son diferentes, pero siguen con la misma idea: se enseña cómo funciona una computadora en general, y después lo particular de cada cosa.

7. ¿Qué más hizo Sadosky después?
   1. Montevideo: ayudó a la creación del IC allí. Dr. Honoris Causa.
   2. Fundó la consultora Asesores Científico Técnicos, primera empresa especializada en desarrollo de software del país.
   3. Fue Secretario de Ciencia y Técnica en 1983 (democracia de Raúl Alfonsín).
8. La ESLAI (1985)
   1. Atraso y brecha tecnológica:
      1. Acá: Todo detenido durante la dictadura. ¿Hay carreras, licenciados, doctores, informática aplicada? \to{} muy poca.
      2. Afuera: Avanzó sin detenerse.
   2. ¡Se necesitan más profesionales!: ¿cómo les parece que afecta la ausencia de profesionales en la informática en los distintos sectores de argentina? ¿cómo pueden haber más profesionales si en nuestro país no hay quién los forme?
   3. Sadosky promueve la Escuela Superior Latinoamericana de Informática (ESLAI), un paralelo del Balseiro pero en computación.
   4. La idea: Introducir profesionales actualizados, y altamente capacitados, en los sectores académicos y productivos.
   5. Rápido: dedicación exlusiva al estudio y la investigación.
   6. "Blindaje político" \to{} Habracar países latinoamericanos. Directorio con funcionarios de la UNESCO, Secretaría de Ciencia y Técnica del país, empresarios informáticos y personalidades académicas.
   7. Durante la presidencia de Menem, 1990: Las inversiones para la ESLAI no llegan, aluden a demoras burocráticas. Esto genera *la desfinanción y el posterior cierre*.

\thinkingface{} Preguntas: Estas cosas que mencioné, ¿observaron el rol de la educación pública? ¿la importancia de la educación y el acceso al conocimiento?
Si no se investiga ni se estudia con especialistas, si la inversión en esto se cae: ¿cómo afecta a los sectores industriales, académicos, etc.?


Algunos datos de color:

- CONICET: Se funda en 1958. La inversión para la primer computadora fue realizada al CONICET en 1962.

** Bibliografía
- "Historia de la Informática en Latinoamérica y el Caribe: investigaciones y testimonios". Jorge Aguirre y Raúl Carnota. Universidad Nacional de Río Cuarto, Argentina. 2009.
  
  \glasses{} PDF disponible en: https://www.researchgate.net/publication/310625262_Historia_de_la_informatica_en_Latinoamerica_y_el_Caribe_investigaciones_y_testimonios
  
- "Sadosky por Sadosky vida y pensamiento del pionero de la computación argentina". Raúl Carnota, Carlos Borches. Fundación Sadosky.
  
  \glasses{} PDF disponible en: https://www.dc.uba.ar/clementina50/sadosky-por-sadosky-2/
  
- ¿Para qué tareas se utilizó Clementina?
  
  "Clementina, la primera computadora que tuvo la UBA", Daniel Balmaceda. Artículo del diario La Nación del 17 de diciembre del 2019.
  
  https://www.lanacion.com.ar/sociedad/clementina-primera-computadora-tuvo-uba-nid2315966/
- Canción de Clementina.

  "Oh, my darling Clementine" interpretada por Rabanus Flavus (Peter Gerloff). Archivo MIDI disponible en Wikimedia commons. Obra bajo la licencia Creative Commons 0 (CC0 1.0).
  
  https://commons.wikimedia.org/wiki/File:O_My_Darling_Clementine.mid
- Cecilia Berdichevski y las mujeres que trabajaron con Clementina y COMIC.
  
  "Las mujeres de Clementina". Departamento de Computación de la Facultad de Ciencias Exactas y Naturales, UBA.
  
   https://www.dc.uba.ar/las-mujeres-de-clementina/
- COMIC el primer compilador argentino.
  
  "COMIC el lenguaje de programación y compilador del Instituto de Cálculo en 1965". Durán Salvador, Wilfred Oscar (2018). Ediciones del domo.
  
- "Panorama de la historia de la Computación Académica en la Argentina. Jorge Aguirre.
- Nota Preliminar de García Camarero:

  "Autocode un sistema simplificado de codificación para la computadora Mercury" Instituto del Cálculo UBA. 1961.


* Columna 5: ¿Quién fue Manuel Sadosky?
\radio{} Emisión al aire: <2023-08-25 vie 15:00>

\headphone{} [[https://ar.radiocut.fm/audiocut/columna-cristian-gimenez-quien-fue-manuel-sadosky-yo-no-fui-25-08-2023/][Escuchar recorte en RadioCut]].

#+caption: Manuel Sadosky de pié al lado de Clementina.
#+attr_html: :alt Foto de Manuel Sadosky junto a Clementina :align center
[[https://upload.wikimedia.org/wikipedia/commons/1/12/Manuel_Sadosky_y_Clementina.jpg]]

En la columna de hoy, hablaremos del doctor Manuel Sadosky. Pero antes, daremos un poco de contexto, la reforma universitaria de 1918, y cómo afectó después a las universidades. Sadosky junto con otros científicos trajeron y utilizaron la primer computadora a argentina, que por la música que emitía, la llamaron Clementina. ¿Quieren saber un poco de esta historia y quiénes fueron las primeras personas que programaron en Argentina? ¡Prepárense unos mates y escuchen este audio!


\framedpicture{} Imágen: Manuel Sadosky y Clementina. Imágen bajo el dominio público. Obtenido desde [[https://commons.wikimedia.org/wiki/File:Manuel_Sadosky_y_Clementina.jpg][Wikimedia Commons]].

** Guión

1. Contexto: Universidades desde el siglo XIX hasta 1918:
   - Católicas mayormente (UNC), estudiantes con dificultades para ingresar.
   - Ley de Avellaneda: el Gobierno Nacional dicta sus estatutos, designan las autoridades y profesores y dependen administrativamente del gobierno.
2. Reforma universitaria: 1918
   - Importante movimiento estudiantil: autonomía del poder político, gobierno representado por docentes y estudiantes, asignación por concursos públicos, libertad de pensamiento.
     
3. Sadosky nace el 13 de abril de 1914, cursó primaria y secundaria en la Escuela Normal Mariano Acosta (si no entiendo mal, es una escuela pública). En 1940 se graduó como Doctor en Ciencias Fisico-Matemáticas de la UBA y ejerció la docencia en la Universidad de La Plata.
   1. Becado para ir a Francia durante 1946-1948, investigó en Italia. Atestiguó el surgimiento de las primeras computadoras.
   2. Publicó "Cálculo numérico y gráfico", primer texto en castellano de su tipo. 1952.
   3. Vuelve a la docencia en 1955.
   4. "Cálculo diferencial e integral" junto con Dra. Rebeca Guber. 1956.
   5. Dr. Manuel Sadosky con Gonzáles Domínguez, Rey Pastor y otros profesores de la UBA *comenzaron a incluir la Computación en 1957*.

4. 1957 las universidades son autónomas y autárquicas.
   - Este contexto impulsa la designación de personas destacadas y el desarrollo de la computación.
   - Se radican extranjeros con importantes conocimientos matemáticos.
   - Impulsan proyectos de desarrollo de las Ciencias.
   - La Facultad de Ciencias Exactas y Naturales de la UBA tiene como vicedecano al Dr. Manuel Sadosky en este año.

5. *Se compró una Mercury Ferranti* que llegó en 1960. 152.099 libras esterlinas, (equivalen a  USD 4.500.000 en el 2011).
   
   ¿Vamos de compras en 1960?
   
   - Ultrathin (?): 18 metros y medio de largo, media tonelada de peso.
   - Rápida (?): Tres horas para encender.
   - Fácil de instalar (?): Red eléctrica distinta a la convencional.
   - ¿Gigas de RAM DDR5? Nah, de válvulas mejor: 1K de palabras de 48b = 4750 Bytes = ~4Kb
   - ¿Disco rígido sólido? ¿para qué?: Disco de tambores magnéticos, 4 tambores de 8K cada uno.
   - ¿Monitor de 500 pulgadas? Ni ahí: Entrada/Salida con cinta de papel perforado, impresora 30 caracteres por segundo. Pero le adaptaron un lector de tarjetas perforadas *nacional*.
   - ¿Teclado? ¿para qué? nah, no tiene.
   - Un parlante (con musiquita de "Oh my darling, Clementine").    
   - ¿Windows 60'? No, no... Programas: Ensamblador orientado al cálculo, Autocode.
     - Luego, se creó el compilador y lenguaje COMIC en Argentina gracias a Liana Lew, Noemí García, Wilfred Durán, Ana Zoltran Torres, Clarisa Cortés.

6. ¿Para qué se usaba?
   
   Se usaba para cálculos matemáticos: pautas en el sistema de ahorro y préstamos, estudio de ríos patagónicos, cálculos astronómicos (órbita del cometa Halley), censos comerciales, análisis del funcionamiento de reactores nucleares, investigaciones cardiológicas, traducciones (ruso-español). 
   
   Encargada de programarla: *Cecilia Berdichevsky*.
     
7. La Universidad de Buenos Aires (UBA) Y la Universidad del Sur (UNS) quisieron hacer su computadora: la CEFIBA (1962).
   - UBA: La CEFIBA (1962) a cargo del Ing. Humberto Ciancaglini.
   - UNS: la CEUNS (1962) a cargo del Ing. Jorge Santos \to{} Procesaba con números racionales.

8. ¿Quién tiene idea de cómo programar esta computadora? \to{} Fundó el Instituto del Cálculo en 1962.
   
   - Autocode: un sistema para la Ferranti Mercury - 1961
     - \books{} Leer los agradecimientos de la nota preliminar del manual de Autocode de García Camarero del IC (ver Bibliografía)
       
       /"Hemos de agradecer la paciente y minuciosa lectura de nuestra primera redacción, así como sus múltiples puntualizaciones, a la Dra. Cicely M. Popplewell. También agradecemos la valiosa colaboración de la Dra. R.Ch. de Guber. Buenos Aires, octubre de 1961" -- E. García Camarero/
   - COMIC : Lenguaje de programación creada por IC - 1965    

9. ¿Qué pasó luego? La noche de los bastones largos (29 de julio de 1966, en dictadura de Onganía).
   1. Intervencion de las Universidades Nacionales.

      Humillados violentamente: estudiantes, docentes y graduados, los retiraron a la fuerza del edificio, y afuera, los hacían pasar uno a uno para pegarles con palos o culatas.

      ¿Por qué los militares hicieron eso?
      
   2. Docentes, alumnos y graduados, hasta Warren Ambrose, profesor del MIT y de la UBA, fueron detenidos.
   3. Renuncias y éxodo de investigadores - Fuga de cerebros . Sadosky se exilió más tarde, en ~1974.
   4. El IC, Clementina y la carrera de Computador Científico se destruyó.
   5. Sucesivas protestas estudiantiles y represión.
   6. Prohibidas reuniones en la facultad.
   7. Clementina deja de funcionar y la computación entra en una época oscura por varios años.
10. ¿Qué más hizo Sadosky?
    1. Montevideo: ayudó a la creación del IC allí. Dr. Honoris Causa.
    2. Fundó la consultora Asesores Científico Técnicos, primera empresa especializada en desarrollo de software del país.
    3. Fue Secretario de Ciencia y Técnica en 1983 (democracia de Raúl Alfonsín). 
    4. Promueve la Escuela Superior Latinoamericana de Informática (ESLAI), un paralelo del Balseiro en computación. Desfinanciada por Menem en 1990.

\thinkingface{} Preguntas: ¿qué rol tuvo la universidad pública para Sadosky? ¿creen que la violencia han resuelto los problemas que tuvimos o por el contrario?

¡Listo! \bomb{} Bomba poneme Clementina \musicalnote{} (ver link en Bibliografía).

Algunos datos de color:

- CONICET: Se funda en 1958
- Otra personalidad importante: *René Favaloro*: Escuela 45, Colegio Nacional Rafael Hernández, Universidad Nacional de La Plata (UNLP), Hospital Policlínico. Escuelas y universidades públicas.

** Bibliografía
- "Sadosky por Sadosky vida y pensamiento del pionero de la computación argentina". Raúl Carnota, Carlos Borches. Fundación Sadosky.

  PDF disponible en: https://www.dc.uba.ar/clementina50/sadosky-por-sadosky-2/
  
- ¿Para qué tareas se utilizó Clementina?
  
  "Clementina, la primera computadora que tuvo la UBA", Daniel Balmaceda. Artículo del diario La Nación del 17 de diciembre del 2019.
  https://www.lanacion.com.ar/sociedad/clementina-primera-computadora-tuvo-uba-nid2315966/
- Canción de Clementina.

  "Oh, my darling Clementine" interpretada por Rabanus Flavus (Peter Gerloff). Archivo MIDI disponible en Wikimedia commons. Obra bajo la licencia Creative Commons 0 (CC0 1.0).
  https://commons.wikimedia.org/wiki/File:O_My_Darling_Clementine.mid
- Cecilia Berdichevski y las mujeres que trabajaron con Clementina y COMIC.
  
  "Las mujeres de Clementina". Departamento de Computación de la Facultad de Ciencias Exactas y Naturales, UBA.
   https://www.dc.uba.ar/las-mujeres-de-clementina/
- COMIC el primer compilador argentino.
  
  "COMIC el lenguaje de programación y compilador del Instituto de Cálculo en 1965". Durán Salvador, Wilfred Oscar (2018). Ediciones del domo.
  
- "Panorama de la historia de la Computación Académica en la Argentina. Jorge Aguirre.
- Nota Preliminar de García Camarero.

  "Autocode un sistema simplificado de codificación para la computadora Mercury" Instituto del Cálculo UBA. 1961.
* Columna 4: ¿Qué es el filtro burbuja?                              :ATTACH:
:PROPERTIES:
:ID:       72e04deb-8e2b-4d72-9184-d355139b63ff
:END:

\radio{}  Emisión al aire: <2023-08-11 vie 15:00>

#+attr_html: :alt Imágen de burbujas chocando con mucho zoom. Su superficie tiene diferentes colores.
[[file:data/72/e04deb-8e2b-4d72-9184-d355139b63ff/planet-bubbles-01-scaled.jpg]]

Cuando buscamos algo en Internet, ¿por qué los resultados son diferentes a los de otras personas? ¿cómo se filtran y ordenan esos resultados? ¿cómo sabe el buscador que deseo esos resultados? ¿esto puede producir algún efecto social?
Hablamos de los Filtros Burbujas, la cámara de eco y cómo los buscadores y páginas Webs más habituales nos muestran una porción de Internet. 



\framedpicture{} Imágen: Bubbles Closeup - Bajo la licencia Creative Commons 0 (Dominio Público).
[[https://store.kde.org/p/2056567]]

** Guion

1. Nada de Repaso \grinning{}: "¿Se acuerdan que hablamos de Algoritmos y que la IA es un algoritmo?
   ¿que mencionamos a los algoritmos de sugerencias?".
2. Definición: /state of intellectual isolation that can result from personalised searchs./
   1. ¿Qué es? Podríamos decir que es un fenómeno medio sociológico-tecnológico.
3. \glassright{} Mostremos cómo funciona con buscar Messi y ver los resultados: Buscamos en Google "Messi", y buscamos "Messi" en Google con Tor.
   Probemos con siglas: WP, BP...

   \books{} Tener a mano el artículo E. Bozdag, "Bias in algorithmic filtering and personalization", Springer. Página 212.
   
   1. ¿Cómo funciona? ¿cómo recolectan la información? ¿por qué? \to{} Cómo se arman las burbujas.
      1. Historial, páginas que visitamos, búsquedas hechas, ubicación geográfica.
      2. Caso extremo: Facebook tracks users with like button: Web beacons (baliza/faro Web)
         
4. Efectos: Exposición a Echo Chamber \to{} más Fake News
   1. No solo funciona para las ads \to{} ¡también para lo que leemos en las redes!
   2. Dinámicas: Estás solo, es invisible (¿es neutral/unbiased? es casi imposible saberlo), no se elige entrar.
   3. Echo Chamber: Creencias amplificadas por repetición en un sistema cerrado y aislado de refutaciones.
   4. Se repiten noticias para autojutificarse: ¿y si agregamos Fake News?
   5. "nos cierran a nuevas ideas"
   6. "nuestros intereses son los únicos que existen"
   7. No alcanzar otros recursos: una vez adentro de la Echo chamber, ¿se puede buscar otros artículos fácilmente?
   8. Meteoro y Bomba citaron hace un tiempo a Chris Palmer de la EFF: /"You're getting a free service, and the cost is information about you. And Google and Facebook translate that pretty directly into money."/
5. (Opcional) ¿Alguna vez intentaron usar redes sociales libres? ¿qué sucede al principio?

   ¿Cómo es no estar en el filtro?
   
6. Alternativas:
   1. Tecnológicas: Metabuscadores: Startpage; Otros: DDG, Yacy...
   2. Personales: ¿Qué podemos hacer como usuarixs? \to{} ¿usar Tor?
   3. ¿Sirve navegar en privado? \to{} Hay que saber navegar en privado con Tor.
7. Hotel California: "You can check out any time you like/But you can never leave"
   1. Aislamiento de los usuarios de otras redes sociales: *no proveen contenidos de otras redes*.
   2. Afecta negativamente a la *Neutralidad en la red* (acceso equitativo de la información).

\thinkingface{} Preguntas:
- Ahora que conocen este fenómeno: ¿Consideran importante aprender de informática? ¿Y que estaría bueno conocer cómo funcionan estos algoritmos de sugerencia?
- Cada noticia que ustedes miran en redes sociales: ¿no les parece que conviene chequearlas con varias fuentes? ¿Habitualmente se preguntan si son verdad o no?

\musicalnotes{} ¿Se podrá terminar con la canción Hotel California? ~03:04

** Bibliografía
1. https://www.theguardian.com/technology/2010/nov/22/tim-berners-lee-facebook
   1. https://www.scientificamerican.com/article/long-live-the-web/
2. https://www.huffpost.com/entry/algorithms-and-the-filter_b_869473
3. https://www.technologyreview.com/2015/09/16/166222/facebooks-like-buttons-will-soon-track-your-web-browsing-to-target-ads/
4. https://www.eff.org/deeplinks/2011/10/facebook%E2%80%99s-hotel-california-cross-site-tracking-and-potential-impact-digital-privacy
5. https://misq.umn.edu/understanding-echo-chambers-and-filter-bubbles-the-impact-of-social-media-on-diversificationi-and-partisan-shifts-in-news-consumption.html
6. Pariser, Eli. "The Filter Bubble: What the Internet is Hiding from You". Penguin Press. 2011.

* Columna 3: ¿Qué es un algoritmo?                                   :ATTACH:
:PROPERTIES:
:ID:       d366e442-9ea8-463d-81bf-77bf2b1deb08
:END:

\radio{} Emisión al aire: <2023-07-28 vie 15:00>

#+attr_html: :alt Foto con mucho zoom de una hoja que tiene dibujada un diagrama de flujo.
[[file:data/d3/66e442-9ea8-463d-81bf-77bf2b1deb08/flowchart.jpg]]

"El algoritmo me sugiere estas pelis", "el algoritmo sabe lo que te gusta"... Pero... ¡¿Qué es un "algoritmo"?!

Revelaremos el significado de esta palabra que siempre usamos. Eso que está detrás de las páginas Webs y que nos sugiere cosas, pero que nunca la vimos. Un algoritmo, ¿qué es? ¿la IA es un algoritmo? ¿las computadoras usan algoritmos? ¿las personas usamos algoritmos?



\framedpicture{} Imágen: Flowchart por Gautier Poupeau - Bajo la licencia Creative Commons Atribución (CC-by 2.0). Obtenido desde https://flic.kr/p/rt5Q1d

** Guion


#+begin_quote
/Algoritmo/

/Quizá del lat. tardío *algobarismus, y este abrev. del ár. clás./ :
#+latex: {\unicodefont ḥisābu lḡubār}
#+html: ḥisābu lḡubār
/"cálculo mediante cifras arábigas"./

1. /m. Conjunto ordenado y finito de operaciones que permite hallar la solución de un problema./
2. /m. Método y notación en las distintas formas del cálculo./

-- RAE ([[https://dle.rae.es/algoritmo]])
#+end_quote

1. Definición de la RAE.
   1. Sumémosle "operaciones no ambiguas".
   2. ¿Dice del "árabe clásico"? \to{} ¡no es un concepto nuevo!

   Se piensa que el nombre se debe por el matemático Abu Abdallah Muḥammad Ibn Mūsā Al-Jwarizmī (cariñosamente como: Abu Yāffar, al-Juarismi o Algorithmi), cerca de 820 dc.
2. ¿Qué algoritmos usamos día a día?
   - Cuando sumamos y restamos en un papel.
   - ¿Qué hacés todas las mañanas al levantarte?
3. ¿Qué tiene que ver con la compu?
   1. Las computadoras "computan": calculan: ¿cómo?
   2. La computadora usa "programas": conjunto ordenado y finito de instrucciones para una computadora.
4. ¿Qué es y qué no es un algoritmo?
   1. ¿El software es un programa? ¿y los datos?
   2. ¡Algo que guarde estados! Variables, archivos...
   3. ¿La IA será un algoritmo? \to{} P. ej.: "Es el algoritmo de Netflix/Spotify"
5. ¿Cuántas instrucciones ejecuta un procesador?
   
   \nerdface{} Una curiosidad: *Bomba, Mete, Virgi: ¡Saquen la calculadora \abacus{}!*
   Si el procesador es de 2Ghz \to 2 000 000 000 Hz (Intel i9 con 8 núcleos, 2023).
   Instrucción usa 1 o dos ciclos.
   
   Saquemos la cuenta: ¿cuántas instrucciones hace en un segundo?
6. ¿Cuántos programas puede ejecutar una computadora?
   1. ¿Cuántos procesadores tenés? ¿cuántos hilos?
   2. El sistema operativo intercala el uso del procesador.
   3. En definitiva: pueden haber muchísimos programas funcionando.q

   ¡Los informáticos nos gusta saber qué hace todos los programas!
   No nos gusta los virus.
   
7. +(Si hay tiempo) ¿Cómo son los programas?+

  \books{} Llevar los ejemplos de un programa escrito en binario, assembler y código de alto nivel.
   
   1. El procesador usa electricidad: supongamos "5v es encendido, 0v es apagado".
   2. Binario 1 y 0. Compuertas lógicas \to{} ALU
   3. Formato de las instrucciones: supongamos 4 bits dicen la instrucción, el resto son los parámetros.
   4. Pero, ¿alguien entiende binario? \to{} Assembler: le damos mnemotécnicos a cada instrucción.
   5. ¿Alguien entiende assembler? \to{} Lenguajes de alto nivel: palabras se transforman en código assembler.

\thinkingface{} Preguntas:
- ¿Cómo ven a la computadora ahora que entienden un poco más que hace?
- ¿Qué algoritmo usarán para este fin de semana? \partyingface{}

#+latex: \newpage
* Columna 2: ¿Quién fue Alan Turing?
\radio{} Emisión al aire: <2023-07-14 vie 15:00>

#+caption: Estatua representando a Alan Turing en Bletchley Park, atrás su fotografía.
#+attr_html: :alt Estatua representando Alan Turin. Atrás se observa su fotografía.
[[https://upload.wikimedia.org/wikipedia/commons/2/22/Alan_Turing_cropped.jpg]]

En la computación, hubo un antes y un después de que Turing publicara sus artículos. Por eso te contamos quién fue y un poquito de sus aportes. ¿Qué hizo? ¿Qué visión tenía? ¿Por qué se lo considera tan relevante en esta área? 



\framedpicture{} Imágen: Alan Turing por Jon Callas - Bajo licencia Creative Commons Atribución 2.0 Genérica (CC-by 2.0). Obtenido desde [[https://commons.wikimedia.org/wiki/File:Alan_Turing_cropped.jpg][Wikimedia Commons]].

** Guion

1. Repaso:
   1. ¿Qué era una computadora antes de Turing? \pointright{} Una computadora, era una persona que calculaba números: trabajo tedioso donde solo "sacaban cuentas".

      ¿Se acuerdan de las tablas y el Almanaque Náutico?
   
   2. Máquina Analítica de Babbage:
      1. Nunca llegó a implementarla completamente.
      2. Primer intento de crear una máquina que *no hace una tarea*:
         Usa instrucciones con planchuelas perforadas.
      # 3. Nace Turing en 1912, un 23 de junio. Estudia matemáticas en la universidad.
      #    - Obtiene una beca para trabajar en su misma universidad.
2. Nace el 23 de junio de 1912. Estudia matemáticas.

   Realiza su doctorado e introduce el concepto de *Máquina de Turing* (MT) en 1936 aprox.   
   - Dice que la máquina computa: realiza cálculos ¡ya no es más una persona!   
   - Usa una cinta, un cabezal lectoescritor, y estados. La define matemática o formalmente.   
   - Alonzo Church (su director de tesis doctoral) y otros autores desarrollan otras formas de computar (calculo lambda, funciones recursivas primitivas, etc.).   
   - Todas equivalentes a la de Turing.
   
3. +Determina que hay cosas que no se puede computar.+ \larr \warning{} ¡No se llegó! 
   - +Demuestra el /Entscheidungsproblem/+
     # #+latex: {\unicodefont [ɛntˈʃaɪ̯dʊŋspʁoˌbleːm]}
     +problema de la detención (tesis Turing-Church):+
     # - Gottfried Leibniz: ¿se imaginan una máquina para determinar si una sentencia lógica es verdadera?
     # - Lógica \to{} MT: Las MT manipulan símbolos y representan funciones.
     - +Turing: ¿se puede crear un programa para determinar si una máquina se detiene o no bajo una entrada?+
     - +Otro día...+
   - +Por eso, no se puede saber si hay bucle infinito: ¡se cuelga la compu!+
4. Turing pudo romper los códigos alemanes de la máquina enigma con su invento: la máquina Bombe. Fue en Blechtley Park. 1939.
   - Hay muchas películas de Turing: El Código Enigma...
     - Ojo con al impresión que dejan las pelis: se rumorea que era un excelente atleta.
5. Publica "Computing Machinery and Intelligence" en 1950... Veamos qué tiene...
   
   \books{} *Llevar el artículo impreso para que lo vea Mete, Virgi y Bomba*
   
   1. Tiene una conversación entre una máquina y una persona...
      ¿chat con una IA?¡ni siquiera existía el término!
   2. Se debate si las máquinas pueden pensar...
      Su respuesta: ¿¡para qué preguntarse eso si van a simular que piensan muy bien!?
   3. Hay un título interesante: "Learning machines"
      ¡No me digas que ya preveía que las máquinas pueden aprender!
6. En esa época, había mucha interdisciplina (psicología + matemáticas en Blechtley Park).
   Hizo trabajos en biología matemática: morfogénesis.
7. Alan Turing fue acusado por ser homosexual y condenado a un tratamiento hormonal (~1952).
8. Alan Turing recibe el perdón... póstumo, de la Reina Elizabeth II en 2013.
   - Existe la informalmente llamada "Alan Turing Law", ley que retroactivamente perdona a personas condenadas por las leyes de actos homosexuales.


\thinkingface{} Entonces, teniendo en cuenta la historia de Turing nos deja mucho para pensar:
   - Con tantos dichos en los medios ¿hemos podido superar esa idea de "indecencia" ante el género y orientación sexual?¿aún más allá de quién tenemos en frente?
   - Ahora que tenemos como noticia la IA, ¿les parece que es algo reciente?
   - ¿Creen que la computadora puede reemplazar completamente a un humano?
     ¡hay problemas no computables!
     Por ejemplo: ¿Creen que la computadora puede reemplazar una obra de arte? ¿significará lo mismo que si lo hace una persona? ¿una canción que la canta un cantante expresaría lo mismo?

** Bibliografía

- "La computación Turing - Pensando en máquinas que piensan". Rafael Lahoz-Beltra. RBA Colleccionables. 2012.
- "Computing Machinery and Intelligence". Alan M. Turing. Mind LIX N^{\circ }236. 1950. 
  https://academic.oup.com/mind/article/LIX/236/433/986238


#+latex: \newpage
* Columna 1: ¿Quién fue Ada Lovelace?
\radio{} Emisión al aire: <2023-06-30 vie 15:00>

#+caption: Retrato en acuarela de Ada Lovelace.
#+attr_html: :alt Una pintura en acuarela retratando a Ada Lovelace con un vestido violáceo.
[[https://upload.wikimedia.org/wikipedia/commons/a/a4/Ada_Lovelace_portrait.jpg]]

Augusta Byron, mejor conocida como Ada Lovelace, estudió matemática y se interesó mucho por el diseño de la máquina analítica de Charles Babbage. Se interesó a tal punto que publicó una traducción de un escrito que explicaba cómo funcionaba, junto con un montón de notas de su propia elaboración. Entre estas notas, se encuentra una joya: el primer programa.

En esta grabación te contamos quién fue Ada Lovelace, qué hizo y por qué se la conoce como la primer progaramdora.


\framedpicture{} Imágen: Ada Lovelace Portrait, fotografiado por la Science Museum Group. Bajo el dominio público. Obtenido desde [[https://commons.wikimedia.org/wiki/File:Ada_Lovelace_portrait.jpg][Wikimedia Commons]].


** Guion                                                            :ATTACH:
:PROPERTIES:
:ID:       6f2b0c10-f143-4af7-a523-b4bcb302dd79
:END:

Mini-guion de prueba:

1. ¿Saben quién es la primer persona que programó y qué hizo?
2. (Optional) Si bien, los comienzos de la informática son recientes, hay muchos conceptos previos a "computación"
   - Algoritmo, programa, instrucciones, cálculos, máquinas.
   - /A partir de ahora, cuando digo "computación" significa calcular o una persona que hace cálculos./     
3. En 1766 se precalculaban muchos resultados en tablas: logaritmos, trigonométricos, etc. También, tablas para distintos oficios: /Nautical Almanac/ (ver Figura [[fig:alman-nauti]]).
   - Computadores eran personas (¡eran freelancers! ¡vaya si es nueva la idea!) que calculaban: había muchos errores.
4. En 1820 Charles Babbage costruye la *máquina/motor Diferencial*. Calculaba funciones polinomiales. Recibió inversiones del gobierno británico.
   - La idea era crear estas tablas con menos errores (y más barata claro).
   - Aquí, aparece *Lady Byron* (Anne Milbanke), quien observa un prototipo en funcionamiento.
5. En 1837 diseña la *Máquina Analítica* de Charles Babbage.
   1. Tenía una unidad aritmética-lógica (ALU), control de flujo y memoria. Usaba tarjetas perforadas.
   2. Nunca se completó
6. Mientras, una joven se interesa por la máquina: *Augusta Byron*, hija de Lady Byron.
   1. Una joven que aprendió matemática y lógica impulsada por su madre (para que no heredara de su padre la locura y el exceso romántico).
      Conoció a Babbage y otros científicos de la época, incluso a Charles Dickens (Oliver Twist, A Christmass Carol (cuentos de navidad)).
   2. Se casa con William King, que luego es designado en Earl of Lovelace o "conde" de Lovelace. Augusta pasó a llamarse Ada Lovelace.
7. Consideraba que la Máquina Analítica tenía potencial por que se programaba \warning{} *confirmar con bibliografía*.
8. ¿Qué hizo Ada? Publicó una traducción de /Sketch of the Analytical Engine invented by Charles Babbage/ por Luigi Federico Menabrea. Incluyó sus propias anotaciones.

    \books{} *Mostrar la Tabla a Mete, Virgi y Bomba* (¡tengo el PDF completo!).
    
   1. Diseñó una tabla para calcular los números de Bernoulli.
   2. La tabla tenía una secuencia de instrucciones, las variables utilizadas, los resultados en fórmulas matemáticas, y mostraba cómo iba cambiando las variables.
      1. Una secuencia de instrucciones... ¡es un programa!
      2. En la universidad, la tabla la conocemos como ¡traza! o debug para los programadores.
9. Hubo y hay muchas mujeres en la informática: "Las chicas de ENIAC" (primera computadora), proyecto VENONA, Booth Kathleen (lenguaje ensamblador), Grace Hopper (COBOL), Margaret Hamilton (Apollo)
   
   En Argentina: Rebeca Guber, Cecilia Berdichevski. También la estudianta de Turing que brinda la primer clase de programación (1961): Cicely Popplewell
   
   1. Eran matemáticas, de personal de administración, de operadoras de telefonía, todas ellas utilizaban computadoras.
   2. A mediados de los 70' o 80' aproximadamente, la cantidad de mujeres en la computación ha disminuido considerablemente.
   3. En los 90' y 00' se escuchaba cada tanto que la informática era para varones.
   4. Hoy en día, la matrícula de mujeres inscriptas sigue siendo muy reducida comparada con la de los varones. Con un poco de tendencia a revertir esto.
10. (Opcional) Ada fue citada en un artículo de Turing

    Turing se preguntaba si una computadora puede pensar, Ada ya sugería que hay limitaciones matemáticas y que no fue creada para ser original.
11. (Opcional) Se creó un lenguaje de programación a partir de un concurso de la DoD en 1970 buscando el más robusto y entendible. Pasaron casi 7 años y 450 lenguajes para comprender que ninguno cumplía con lo solicitado por lo que se armo un concurso para uno nuevo: Al lenguaje que ganó se lo llamó Ada en honor a ella.
    1. Un lenguaje que se basa en la legibilidad del código, la claridad del mismo y la seguridad/robusteza del mismo.


\thinkingface{} Preguntas: Si hubo mujeres en la matemática y la informática, con grandes logros y aportes:
    ¿no les parece que la informática es para cualquier persona que quiera aprender más allá de su género?

Aproximadamente, se tarda 2' a 3' por ítem. Total: 20'30''.

#+name: fig:alman-nauti
#+caption: Almanaque náutico (fuente Wikimedia Commons).
#+attr_html: :alt Un almanaque náutico de ejemplo.
[[./data/6f/2b0c10-f143-4af7-a523-b4bcb302dd79/Nautical_almanac_01.png]]

** Bibliografía
- "Computer a history of the information machine". Martin Campbell-Kelly y William Aspray. Westview Press. 2004.
  https://archive.org/embed/computerhistoryo02edcamp
- Imágen de un Almanaque Náutico obtenido desde WikiMedia Commons. Autor: U.S. Naval observatory. Bajo dominio público.
  [[https://commons.wikimedia.org/wiki/File:Nautical_almanac_01.png][commons.wikimedia.org/wiki/File:Nautical_almanac_01.png]]

* Consideraciones en el desarrollo del documento
Para el desarrollo de este documento se utiliza [[https://www.gnu.org/software/emacs/][Emacs]] con [[https://orgmode.org/][Org-mode]]. Aquí se presentan algunos tips y snippets (retazos de código fuente)  necesarios para utilizar y generar los documentos LaTeX, PDF y HTML adecuadamente.

** Cambios para la accesibilidad
:PROPERTIES:
:header-args:css: :tangle css/index.css :mkdirp yes
:END:

*** Corrigiendo contraste de colores
El timestamp original tiene color gris, corregir al negro para dar mayor contraste.

#+BEGIN_SRC css
  .timestamp {
      color: black;
  }
#+END_SRC

*** Quitar justificado
El justificado completo suele dejar espacios en blanco. Esto es contraproducente para personas con problemas para leer e interpretar el contenido.

#+BEGIN_SRC css
  p {
      text-align: left;
  }
#+END_SRC


** Exportar fecha en español
Es necesario utilizar un comando de Emacs específico para exportar las fechas en el formato correcto. En este caso, se utiliza =M-x my-org-export-dispatch= en vez del convencional =M-x org-export-dispatch= para preconfigurar el formato de la fecha.

#+BEGIN_SRC emacs-lisp
(defun my-org-export-dispatch ()
  "Exportar un archivo Org con la fecha en español.
Org-mode utiliza timestamps basada en la ISO 8601, y cambiarlo para el
documento es problemático: solo afecta al overlay (visualización) y no
al dato guardado.

Esta función cambia el formato visible momentáneamente previo a
exportar, así los documentos se exportan a LaTeX y HTML con el formato
de fecha en español, y es más sencillo de leer."
  (interactive)
  (let ((org-time-stamp-custom-formats
         '("<%A, %B %d, %Y>" . "<%A, %d de %B del %Y %H:%M>"))
        (org-display-custom-times 't))
    (org-export-dispatch)))
#+END_SRC

#+RESULTS:
: my-org-export-dispatch

** Org-entities
Para generar los emojis en HTML y LaTeX, se incorporan más entidades de Org-mode. Estas entidades se encuentran en mi configuración personal de Emacs, bajo la siguiente URL: [[https://gitlab.com/cnngimenez/emacs-stuff]]

Actualmente, se utiliza la siguiente configuración en particular: [[https://gitlab.com/cnngimenez/emacs-stuff/-/blob/fc0ae63677b37c178be44b1f45abb0510dfa76b4/init.org?plain=1#L2058][Ver configuración]].

* Licencia de esta obra
#+attr_html: :alt Logo de la licencia CC-by-SA.
[[https://i.creativecommons.org/l/by-sa/4.0/88x31.png]]

Esta obra se encuentra bajo la licencia Creative Commons Atribución Compartir Igual 4.0 Internacional.

Ante modificaciones, se debe especificar la obra original y sus autores.

* Código fuente
El código fuente se encuentra disponible en la siguiente URL: [[https://github.com/controlz-fai/control-y]]


#+HTML: </main>

* Meta     :noexport:

# ----------------------------------------------------------------------
#+TITLE:  Columna de Informática - Yo no fui
#+SUBTITLE:
#+AUTHOR: Christian Gimenez
# #+DATE:   13 jun 2023
#+EMAIL:
#+DESCRIPTION: 
#+KEYWORDS: 
#+COLUMNS: %40ITEM(Task) %17Effort(Estimated Effort){:} %CLOCKSUM

#+STARTUP: inlineimages hidestars content hideblocks entitiespretty
#+STARTUP: indent fninline latexpreview

#+OPTIONS: H:3 num:t toc:t \n:nil @:t ::t |:t ^:{} -:t f:t *:t <:t ':t
#+OPTIONS: TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+OPTIONS: tex:imagemagick

#+TODO: FALTA | HECHO

# -- Export
#+LANGUAGE: es
# #+LINK_UP: https://controlz.fi.uncoma.edu.ar
# #+LINK_HOME: https://controlz.fi.uncoma.edu.ar
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+export_file_name: index

# -- HTML Export
#+INFOJS_OPT: view:info toc:t ftoc:t ltoc:t mouse:underline buttons:t path:libs/org-info.js
# #+HTML_LINK_UP: https://controlz.fi.uncoma.edu.ar
# #+HTML_LINK_HOME: https://controlz.fi.uncoma.edu.ar

# -- For ox-twbs or HTML Export
# #+HTML_HEAD: <link href="libs/bootstrap.min.css" rel="stylesheet">
# -- -- LaTeX-CSS
# #+HTML_HEAD: <link href="css/style-org.css" rel="stylesheet">

# #+HTML_HEAD: <script src="libs/jquery.min.js"></script> 
# #+HTML_HEAD: <script src="libs/bootstrap.min.js"></script>
#+html_head: <link rel="stylesheet" href="https://latex.now.sh/style.css" />
#+html_head: <link rel="stylesheet" href="https://latex.now.sh/lang/es.css" />
#+html_head: <link rel="stylesheet" href="css/index.css" />


# -- LaTeX Export
# #+LATEX_CLASS: article
#+latex_compiler: lualatex
# #+latex_class_options: [12pt, twoside]
#+latex_header: \usepackage{emoji}
#+latex_header: \usepackage{csquotes}
# #+latex_header: \usepackage[spanish]{babel}
#+latex_header: \usepackage[margin=2cm]{geometry}
#+latex_header: \usepackage{fontspec}
# -- biblatex
#+latex_header: \usepackage[backend=biber, style=alphabetic, backref=true]{biblatex}
#+latex_header: \addbibresource{tangled/biblio.bib}
# -- -- Tikz
# #+LATEX_HEADER: \usepackage{tikz}
# #+LATEX_HEADER: \usetikzlibrary{arrows.meta}
# #+LATEX_HEADER: \usetikzlibrary{decorations}
# #+LATEX_HEADER: \usetikzlibrary{decorations.pathmorphing}
# #+LATEX_HEADER: \usetikzlibrary{shapes.geometric}
# #+LATEX_HEADER: \usetikzlibrary{shapes.symbols}
# #+LATEX_HEADER: \usetikzlibrary{positioning}
# #+LATEX_HEADER: \usetikzlibrary{trees}

# #+LATEX_HEADER_EXTRA:

# --  Info Export
#+TEXINFO_DIR_CATEGORY: A category
#+TEXINFO_DIR_TITLE: Columna de Informátia - Yo no fui: (Columna Meteoro)
#+TEXINFO_DIR_DESC: One line description.
#+TEXINFO_PRINTED_TITLE: Columna de Informátia - Yo no fui
#+TEXINFO_FILENAME: Columna Meteoro.info


* Footnotes


# Local Variables:
# org-hide-emphasis-markers: t
# org-use-sub-superscripts: "{}"
# fill-column: 80
# visual-line-fringe-indicators: t
# ispell-local-dictionary: "spanish"
# org-latex-default-figure-position: "tbp"
# org-html-htmlize-output-type: css
# End:
